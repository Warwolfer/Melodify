<Window x:Class="Melodify.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Melodify"
        xmlns:interop="clr-namespace:Melodify"
        Background="Transparent"
        AllowsTransparency="True"
        mc:Ignorable="d"
        Title="Melodify"
        Height="100"
        Width="360"
        WindowStyle="None"
        WindowStartupLocation="Manual"
        Topmost="True"
        KeyDown="Window_KeyDown"
        MouseDown="Window_MouseDown"
        MouseDoubleClick="Window_MouseDoubleClick"
        >

    
    <Grid x:Name="MainGrid" MouseEnter="MainGrid_MouseEnter" MouseLeave="MainGrid_MouseLeave" MouseWheel="Mouse_Wheel" AllowDrop="True">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="91*"/>
            <ColumnDefinition Width="89*"/>
        </Grid.ColumnDefinitions>
        <Label Content="Now playing" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="16,-4,16,0" FontSize="14" Foreground="#FFFFFFFF" Panel.ZIndex="-10" Grid.ColumnSpan="2"/>
        <TextBlock Name="Title" HorizontalAlignment="Center" LineHeight="18" LineStackingStrategy="BlockLineHeight" TextAlignment="Center" TextWrapping="WrapWithOverflow"  VerticalAlignment="Top"  Margin="16,54,16,0" FontSize="18"  Foreground="#FFFFFFFF" Panel.ZIndex="-10" Grid.ColumnSpan="2" FontFamily="Lato Light" Grid.Row="4"></TextBlock>
        <Label Name="Author" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="16,24,16,0" FontSize="16" Foreground="#FFFFFFFF" Panel.ZIndex="-10" Grid.ColumnSpan="2"></Label>
        <Image x:Name="cover" Source="https://source.unsplash.com/random/200x400" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0" Stretch="UniformToFill" Panel.ZIndex="-99" Margin="180,-140,0,0">
            <!--<Image.Effect>
                <BlurEffect Radius="40"/>
            </Image.Effect> -->
        </Image>

        <!-- The UI buttons -->
        <Button x:Name="fullClick" Style="{DynamicResource control}" Content="⛶" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="2,2,0,0" Click="Full_Click" Foreground="White" BorderBrush="{x:Null}" Padding="5,2,5,2" Cursor="Hand"
                ToolTipService.InitialShowDelay="500" ToolTipService.ShowDuration="2000" ToolTipService.BetweenShowDelay="10000" ToolTip="Resize to full screen view">
            <Button.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="3"/>
                </Style>
            </Button.Resources>
            <Button.Background>
                <SolidColorBrush Color="Black" Opacity="0.15"/>
            </Button.Background>
        </Button>
        <Button x:Name="playlistClick" Style="{DynamicResource control}" Content="≡" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="2,0,0,2" Click="Playlist_Click" Foreground="White" BorderBrush="{x:Null}" Padding="6, 1, 6, 3" Cursor="Hand"
                ToolTipService.InitialShowDelay="500" ToolTipService.ShowDuration="2000" ToolTipService.BetweenShowDelay="10000" ToolTip="Opens the playlist view">
            <Button.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="3"/>
                </Style>
            </Button.Resources>
            <Button.Background>
                <SolidColorBrush Color="Black" Opacity="0.15"/>
            </Button.Background>
        </Button>
        <Button x:Name="loveClick" Style="{DynamicResource control}" Content="♡" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,2,2" Click="Love_Click" Foreground="White" BorderBrush="{x:Null}" Padding="6, 2, 6, 2" Cursor="Hand" x:FieldModifier="public"
                ToolTipService.InitialShowDelay="500" ToolTipService.ShowDuration="2000" ToolTipService.BetweenShowDelay="10000" ToolTip="Add current songs to favorites" Grid.Column="1">
            <Button.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="3"/>
                </Style>
            </Button.Resources>
            <Button.Background>
                <SolidColorBrush Color="Black" Opacity="0.15"/>
            </Button.Background>
        </Button>
        <Button x:Name="infoClick" Style="{DynamicResource control}" Content="∞" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,2,5,0" Click="Menu_Click" Foreground="White" BorderBrush="{x:Null}" Padding="5,1,5,3" Cursor="Hand"
                ToolTipService.InitialShowDelay="500" ToolTipService.ShowDuration="2000" ToolTipService.BetweenShowDelay="10000" ToolTip="Opens a menu with more actions" Grid.Column="1">
            <Button.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="3"/>
                </Style>
            </Button.Resources>
            <Button.Background>
                <SolidColorBrush Color="Black" Opacity="0.15"/>
            </Button.Background>
        </Button>

        <!-- Media Control buttons -->
        <Button x:Name="pauseButton" Style="{DynamicResource playback}" Content=" " HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="116,0,0,0" Click="PausePlay_Click" BorderBrush="{x:Null}" Padding="50,40,50,25" FontSize="18" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Width="128" Panel.ZIndex="-5" Grid.ColumnSpan="2"/>

        <Button x:Name="previousButton" Style="{DynamicResource playback}" Content=" " HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="0,0,0,0" Click="Previous_Click" BorderBrush="{x:Null}" Padding="50,20,50,25" FontSize="18" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Panel.ZIndex="-5"/>

        <Button x:Name="nextButton" Style="{DynamicResource playback}" Content=" " HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,0,0" Click="Next_Click" BorderBrush="{x:Null}" Padding="50,20,50,25" FontSize="18" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Panel.ZIndex="-5" Grid.Column="1"/>

        <!-- Progress bar -->
        <Grid x:Name="progressGrid"  Margin="0, 24, 0 ,0" Height="4" VerticalAlignment="Top" Width="360" MouseDown="Seek_Playback" Background="#2F92BAF4" Cursor="Hand" Visibility="Visible" MouseEnter="progressGrid_MouseEnter" MouseLeave="progressGrid_MouseLeave" Grid.ColumnSpan="2">
            <Rectangle x:Name="progressBar" Height="3" VerticalAlignment="Top" Margin="0,1,0,0" Fill="#EE4BB5" Width="50" HorizontalAlignment="Left"/>

        </Grid>
        
        <Canvas Background="Black" Height="24" Opacity="0.4" Panel.ZIndex="-90" Grid.ColumnSpan="2" Margin="0,0,0,0" VerticalAlignment="Top"/>
        <Canvas Background="Black" Opacity="0.5" Panel.ZIndex="-999" Margin="0,0,0,0" Grid.ColumnSpan="2"/>

            
        <Grid.ContextMenu>
            <ContextMenu Name="contextMenu">
                <MenuItem Header="Add To Playlist" Click="Populate_Playlists"/>
                <Separator/>
                <MenuItem x:Name="TaskContext" Header="Task View" Click="TaskContext_Click"/>
                <MenuItem Header="Reset Position" Click="ResetPosition_Click"/>
                <MenuItem x:Name="Progressbar" Header="Progress Bar" Click="Progressbar_Click"/>
                <Separator/>
                <MenuItem Header="Info" Click="CMInfo_Click"/>
                <MenuItem Header="Github" Click="CMGithub_Click"/>
                <Separator/>
                <MenuItem Header="Exit" Click="CMExit_Click"/>
            </ContextMenu>
        </Grid.ContextMenu>

    </Grid>

    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#000000" Opacity="0.25"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#000000" Opacity="0"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#000000" Opacity="0.5"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#000000ff"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="control" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual1">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background1" Color="#FFDDDDDD" Opacity="0"/>
        <SolidColorBrush x:Key="Button.Static.Border1" Color="#FF707070" Opacity="0"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background1" Color="#000000" Opacity="0"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border1" Color="#000000" Opacity="0"/>
        <SolidColorBrush x:Key="Button.Pressed.Background1" Color="#000000" Opacity="0"/>
        <SolidColorBrush x:Key="Button.Pressed.Border1" Color="#000000ff" Opacity="0"/>
        <SolidColorBrush x:Key="Button.Disabled.Background1" Color="#FFF4F4F4" Opacity="0"/>
        <SolidColorBrush x:Key="Button.Disabled.Border1" Color="#FFADB2B5" Opacity="0"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground1" Color="#FF838383" Opacity="0"/>
        <Style x:Key="playback" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background1}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border1}"/>
            <Setter Property="Foreground" Value="{StaticResource Button.MouseOver.Border1}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background1}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border1}"/>
                                <Setter Property="Foreground" Value="#55ffffff"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background1}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border1}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background1}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border1}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground1}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

</Window>
