<Window x:Class="Melodify.FullScreen"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:Melodify"
      mc:Ignorable="d" 
      d:DesignHeight="1080" d:DesignWidth="1920"
      Title="Melodify - Fullscreen"
      Background="Black"
      AllowsTransparency="True"
      WindowStyle="None"
      SizeToContent="Manual"
      KeyDown="Window_KeyDown"
      >

    <Grid>

        <Label Name="Title" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,0,0,205" FontSize="52"  Foreground="#FFC7C7C7" Panel.ZIndex="-10">

            <Label.BitmapEffect>
                <DropShadowBitmapEffect Color="Black" ShadowDepth="0" Opacity="0.4" Softness="1" />
            </Label.BitmapEffect>
        </Label>
        <Label Name="Author" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,0,0,150" FontSize="44" Foreground="#FFA4A4A4" Panel.ZIndex="-10">

            <Label.BitmapEffect>
                <DropShadowBitmapEffect Color="Black" ShadowDepth="0" Opacity="0.4" Softness="1" />
            </Label.BitmapEffect>
        </Label>
        <Image x:Name="cover" Source="https://imgur.com/6NznWPx.png" HorizontalAlignment="Center" Height="500" VerticalAlignment="Center" Width="500" Stretch="UniformToFill" Panel.ZIndex="-50" MouseDown="Cover_Click" Margin="0,0,0,100">
            <Image.Effect>
                <DropShadowEffect BlurRadius="20" 
                           ShadowDepth="0" 
                           Color="Black"/>
            </Image.Effect>
        </Image>

        <Grid x:Name="exitGrid" Margin="710,0,710,782" MouseEnter="ExitGrid_MouseEnter" MouseLeave="ExitGrid_MouseLeave">
            <!-- Exit button -->
            <Button x:Name="exitClick" Style="{DynamicResource exit}" Content="×" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,30,0,0" Click="Exit_Click" Foreground="White" BorderBrush="{x:Null}" Padding="5,-12,5,-3" FontSize="36" Visibility="Visible" HorizontalContentAlignment="Center" VerticalContentAlignment="Center">
                <Button.Resources>
                    <Style TargetType="Border">
                        <Setter Property="CornerRadius" Value="50"/>
                    </Style>
                </Button.Resources>
                <Button.Background>
                    <SolidColorBrush Color="Red" Opacity="0.15"/>
                </Button.Background>
            </Button>
            <Canvas Background="Black" Opacity="0.001" Panel.ZIndex="-90"/>
        </Grid>

        <!-- Youtube button -->
        <Grid x:Name="youtubeGrid" Margin="710,0,705,10" MouseEnter="YoutubeGrid_MouseEnter" MouseLeave="YoutubeGrid_MouseLeave" VerticalAlignment="Bottom" Height="322">
            <Button x:Name="youtubeClick" Style="{DynamicResource exit}" Content="⏵" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,0,0,50" Click="Youtube_Click" Foreground="White" BorderBrush="{x:Null}" Padding="8,-8,7,-1" FontSize="36" Visibility="Visible" HorizontalContentAlignment="Center" VerticalContentAlignment="Center">
                <Button.Resources>
                    <Style TargetType="Border">
                        <Setter Property="CornerRadius" Value="7.5"/>
                    </Style>
                </Button.Resources>
                <Button.Background>
                    <SolidColorBrush Color="Red" Opacity="0.15"/>
                </Button.Background>
            </Button>
            <Canvas Background="Black" Opacity="0.001" Panel.ZIndex="-90" Margin="0,0,0,4"/>
        </Grid>

        <!-- The background cover -->
        <Image x:Name="userCover" Source="https://source.unsplash.com/random/200x400" HorizontalAlignment="Center" Height="0" VerticalAlignment="Center" Width="0" Stretch="UniformToFill" Panel.ZIndex="-99" Margin="0,0,0,0">
            <Image.Effect>
                <BlurEffect Radius="40"/>
            </Image.Effect>
        </Image>

        <!-- The playback controls -->
        <Button Style="{DynamicResource playback}" Content=" " HorizontalAlignment="Left" VerticalAlignment="Center" Click="Previous_Click" BorderBrush="{x:Null}" FontSize="18" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Panel.ZIndex="-5" Height="1064" Width="710">
            <Button.Background>
                <SolidColorBrush Opacity="0"/>
            </Button.Background>
        </Button>
        <Button Style="{DynamicResource playback}" Content=" " HorizontalAlignment="Right" VerticalAlignment="Center" Margin="1215,0,0,0" Click="Next_Click" BorderBrush="{x:Null}" FontSize="18" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Panel.ZIndex="-5" Height="1064" Width="705">
            <Button.Background>
                <SolidColorBrush Opacity="0"/>
            </Button.Background>
        </Button>

        <!-- Progress Bar -->
        <Grid x:Name="progressGrid" Height="16" VerticalAlignment="Bottom" MouseDown="Seek_Playback" Background="#01FFFFFF" Cursor="Hand" Visibility="Visible" Panel.ZIndex="50">
            <Rectangle x:Name="progressBar" Height="12" VerticalAlignment="Bottom" Margin="0" Fill="#40FFFFFF" Width="0" HorizontalAlignment="Left"/>
        </Grid>

        <!-- Background to add clickable and darken -->
        <Canvas Background="Black" Opacity="0.5" Panel.ZIndex="-90"/>
        
        <!-- Context Menu -->
        
        <Grid.ContextMenu>
            <ContextMenu Name="contextMenu">
                <MenuItem x:Name="addToPlaylist" Header="Add To Playlist"/>
                <MenuItem x:Name="Progressbar" Header="Progress Bar" Click="Progressbar_Click"/>
                <Separator/>
                <MenuItem Header="Info" Click="CMInfo_Click"/>
                <MenuItem Header="Github" Click="CMGithub_Click"/>
                <Separator/>
                <MenuItem Header="Exit" Click="CMExit_Click"/>
            </ContextMenu>
        </Grid.ContextMenu>

    </Grid>

    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="Red" Opacity="0.25"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="AliceBlue" Opacity="0.5"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="Red" Opacity="0.5"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#000000ff"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="exit" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual1">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background1" Color="#FFDDDDDD" Opacity="0"/>
        <SolidColorBrush x:Key="Button.Static.Border1" Color="#FF707070" Opacity="0"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background1" Color="#000000" Opacity="0"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border1" Color="#000000" Opacity="0"/>
        <SolidColorBrush x:Key="Button.Pressed.Background1" Color="#000000" Opacity="0"/>
        <SolidColorBrush x:Key="Button.Pressed.Border1" Color="#000000ff" Opacity="0"/>
        <SolidColorBrush x:Key="Button.Disabled.Background1" Color="#FFF4F4F4" Opacity="0"/>
        <SolidColorBrush x:Key="Button.Disabled.Border1" Color="#FFADB2B5" Opacity="0"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground1" Color="#FF838383" Opacity="0"/>
        <Style x:Key="playback" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual1}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background1}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border1}"/>
            <Setter Property="Foreground" Value="{StaticResource Button.MouseOver.Border1}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background1}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border1}"/>
                                <Setter Property="Foreground" Value="#55ffffff"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background1}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border1}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background1}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border1}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground1}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
</Window>
